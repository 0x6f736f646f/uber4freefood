// Code generated by protoc-gen-go. DO NOT EDIT.
// source: userPB.proto

package userPB

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LoginReq struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Pwad                 string   `protobuf:"bytes,2,opt,name=pwad,proto3" json:"pwad,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginReq) Reset()         { *m = LoginReq{} }
func (m *LoginReq) String() string { return proto.CompactTextString(m) }
func (*LoginReq) ProtoMessage()    {}
func (*LoginReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_08d451189a7398cb, []int{0}
}

func (m *LoginReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginReq.Unmarshal(m, b)
}
func (m *LoginReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginReq.Marshal(b, m, deterministic)
}
func (m *LoginReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginReq.Merge(m, src)
}
func (m *LoginReq) XXX_Size() int {
	return xxx_messageInfo_LoginReq.Size(m)
}
func (m *LoginReq) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginReq.DiscardUnknown(m)
}

var xxx_messageInfo_LoginReq proto.InternalMessageInfo

func (m *LoginReq) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *LoginReq) GetPwad() string {
	if m != nil {
		return m.Pwad
	}
	return ""
}

type LoginRes struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginRes) Reset()         { *m = LoginRes{} }
func (m *LoginRes) String() string { return proto.CompactTextString(m) }
func (*LoginRes) ProtoMessage()    {}
func (*LoginRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_08d451189a7398cb, []int{1}
}

func (m *LoginRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginRes.Unmarshal(m, b)
}
func (m *LoginRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginRes.Marshal(b, m, deterministic)
}
func (m *LoginRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginRes.Merge(m, src)
}
func (m *LoginRes) XXX_Size() int {
	return xxx_messageInfo_LoginRes.Size(m)
}
func (m *LoginRes) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginRes.DiscardUnknown(m)
}

var xxx_messageInfo_LoginRes proto.InternalMessageInfo

func (m *LoginRes) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type RegDetails struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Usertype             string   `protobuf:"bytes,3,opt,name=usertype,proto3" json:"usertype,omitempty"`
	Company              string   `protobuf:"bytes,4,opt,name=company,proto3" json:"company,omitempty"`
	Email                string   `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegDetails) Reset()         { *m = RegDetails{} }
func (m *RegDetails) String() string { return proto.CompactTextString(m) }
func (*RegDetails) ProtoMessage()    {}
func (*RegDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_08d451189a7398cb, []int{2}
}

func (m *RegDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegDetails.Unmarshal(m, b)
}
func (m *RegDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegDetails.Marshal(b, m, deterministic)
}
func (m *RegDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegDetails.Merge(m, src)
}
func (m *RegDetails) XXX_Size() int {
	return xxx_messageInfo_RegDetails.Size(m)
}
func (m *RegDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_RegDetails.DiscardUnknown(m)
}

var xxx_messageInfo_RegDetails proto.InternalMessageInfo

func (m *RegDetails) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *RegDetails) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *RegDetails) GetUsertype() string {
	if m != nil {
		return m.Usertype
	}
	return ""
}

func (m *RegDetails) GetCompany() string {
	if m != nil {
		return m.Company
	}
	return ""
}

func (m *RegDetails) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func init() {
	proto.RegisterType((*LoginReq)(nil), "userPB.loginReq")
	proto.RegisterType((*LoginRes)(nil), "userPB.loginRes")
	proto.RegisterType((*RegDetails)(nil), "userPB.regDetails")
}

func init() { proto.RegisterFile("userPB.proto", fileDescriptor_08d451189a7398cb) }

var fileDescriptor_08d451189a7398cb = []byte{
	// 231 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x90, 0x31, 0x4f, 0x85, 0x30,
	0x14, 0x85, 0x83, 0x3e, 0x10, 0xaf, 0x0e, 0xe6, 0xc6, 0xa1, 0x61, 0x7a, 0x61, 0x32, 0x31, 0x61,
	0xd0, 0xcd, 0xd1, 0x38, 0x3a, 0x98, 0xc7, 0x2f, 0xa8, 0x78, 0x83, 0x55, 0x68, 0x6b, 0x5b, 0x24,
	0xfc, 0x0b, 0x7f, 0xb2, 0x69, 0xa1, 0x90, 0x68, 0xf2, 0xb6, 0x7e, 0xe7, 0xf6, 0xe4, 0xde, 0x73,
	0xe0, 0x72, 0xb0, 0x64, 0x5e, 0x1e, 0x2b, 0x6d, 0x94, 0x53, 0x98, 0xcd, 0x54, 0x3e, 0x40, 0xde,
	0xa9, 0x56, 0xc8, 0x03, 0x7d, 0x61, 0x01, 0xb9, 0x57, 0x25, 0xef, 0x89, 0x25, 0xfb, 0xe4, 0xe6,
	0xfc, 0xb0, 0x32, 0x22, 0xec, 0xf4, 0xc8, 0xdf, 0xd8, 0x49, 0xd0, 0xc3, 0xbb, 0xdc, 0xaf, 0x5e,
	0x8b, 0xd7, 0x90, 0x3a, 0xf5, 0x49, 0x72, 0x31, 0xce, 0x50, 0xfe, 0x24, 0x00, 0x86, 0xda, 0x27,
	0x72, 0x5c, 0x74, 0xf6, 0xe8, 0x82, 0x02, 0x72, 0xcd, 0xad, 0x1d, 0x95, 0x89, 0x4b, 0x56, 0x8e,
	0x3e, 0x37, 0x69, 0x62, 0xa7, 0x9b, 0xcf, 0x33, 0x32, 0x38, 0x6b, 0x54, 0xaf, 0xb9, 0x9c, 0xd8,
	0x2e, 0x8c, 0x22, 0xfa, 0x93, 0xa8, 0xe7, 0xa2, 0x63, 0xe9, 0x7c, 0x52, 0x80, 0xbb, 0x0f, 0xb8,
	0xe0, 0x83, 0x7b, 0xaf, 0xc9, 0x7c, 0x8b, 0x86, 0xf0, 0x16, 0xd2, 0x67, 0x9f, 0x01, 0xaf, 0xaa,
	0xa5, 0x9f, 0x58, 0x47, 0xf1, 0x57, 0xb1, 0x58, 0x41, 0x56, 0x8b, 0x56, 0x0e, 0x1a, 0x31, 0xce,
	0xb6, 0x74, 0xff, 0xff, 0xbf, 0x66, 0xa1, 0xeb, 0xfb, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x69,
	0x84, 0xa0, 0xd2, 0x7b, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AuthServiceClient is the client API for AuthService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthServiceClient interface {
	Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginRes, error)
	Signup(ctx context.Context, in *RegDetails, opts ...grpc.CallOption) (*LoginRes, error)
}

type authServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAuthServiceClient(cc grpc.ClientConnInterface) AuthServiceClient {
	return &authServiceClient{cc}
}

func (c *authServiceClient) Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginRes, error) {
	out := new(LoginRes)
	err := c.cc.Invoke(ctx, "/userPB.authService/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) Signup(ctx context.Context, in *RegDetails, opts ...grpc.CallOption) (*LoginRes, error) {
	out := new(LoginRes)
	err := c.cc.Invoke(ctx, "/userPB.authService/Signup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthServiceServer is the server API for AuthService service.
type AuthServiceServer interface {
	Login(context.Context, *LoginReq) (*LoginRes, error)
	Signup(context.Context, *RegDetails) (*LoginRes, error)
}

// UnimplementedAuthServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAuthServiceServer struct {
}

func (*UnimplementedAuthServiceServer) Login(ctx context.Context, req *LoginReq) (*LoginRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (*UnimplementedAuthServiceServer) Signup(ctx context.Context, req *RegDetails) (*LoginRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Signup not implemented")
}

func RegisterAuthServiceServer(s *grpc.Server, srv AuthServiceServer) {
	s.RegisterService(&_AuthService_serviceDesc, srv)
}

func _AuthService_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userPB.authService/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).Login(ctx, req.(*LoginReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_Signup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegDetails)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).Signup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userPB.authService/Signup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).Signup(ctx, req.(*RegDetails))
	}
	return interceptor(ctx, in, info, handler)
}

var _AuthService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "userPB.authService",
	HandlerType: (*AuthServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _AuthService_Login_Handler,
		},
		{
			MethodName: "Signup",
			Handler:    _AuthService_Signup_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "userPB.proto",
}
